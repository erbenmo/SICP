use a integer
protect it with mutex...

(define (make-semaphore n)
  (let ((count 0)
	(mutex (make-mutex)))
    (define (the-semaphore m)
      (cond ((eq? m 'acquire)
	     (mutex 'acquire)
	     (if (<= count n)
		 (begin (set! count (+ 1 count))
			(mutex 'release))
		 (begin (mutex 'release)
			(the-semaphore 'acquire))))
	    ((eq? m 'release)
	     (mutex 'acquire)
	     (if (> count 0) (set! count (- count 1)))
	     (mutex 'release))))
    the-semaphore))


(define (make-semaphore n)
  (let ((count n)
	(cell (list false)))
    (define (the-semaphore m)
      (cond ((eq? m 'acquire)
	     (if (test-and-set! cell)
		 (the-semaphore 'acquire)
		 (if (> count 0)
		     (begin (set! count (- count 1))
			    (set-car! cell false))
		     (begin (set-car! cell false)
			    (the-semaphore 'acquire)))))
	    ((eq? m 'release)
	     (if (test-and-set! cell)
		 (the-semaphore 'release)
		 (begin (if (< count n) (set! count (+ count 1)))
			(set-car! cell false))))))
    the-semaphore))